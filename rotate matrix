// rotate matrix leetcode 
// my approach
//You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).
//You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.
//Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
//Output: [[7,4,1],[8,5,2],[9,6,3]]
void rotate(vector<vector<int>>& matrix) {
        int n = matrix.size();
        vector <vector<int>> ans( n , vector<int> (n));
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                ans[j][i] = matrix[i][j];
            }
        }
        
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                matrix[i][j] = ans[i][n-1-j];
            }
        }
    }
    
    
//striver's approach
void rotate(vector<vector<int>>& matrix) {
        int n = matrix.size();
        // vector <vector<int>> ans( n , vector<int> (n));
        for(int i=0;i<n;i++){
            for(int j=0;j<i;j++){
                swap(matrix[i][j],matrix[j][i]);
            }
        }
        
        for(int i=0;i<n;i++){
            reverse(matrix[i].begin(),matrix[i].end());
        }
    }
